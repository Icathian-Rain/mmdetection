_base_ = "../configs/yolo/yolov3_d53_8xb8-ms-608-273e_coco.py"

model = dict(
        bbox_head=dict(num_classes=151))

# 修改数据集相关配置
data_root = 'data/tt100k/data/'
metainfo = {
    "classes": ['i1', 'i10', 'i11', 'i12', 'i13', 'i14', 'i2', 'i3', 'i4', 'i5', 'il100', 'il110', 'il50', 'il60', 'il70', 'il80', 'il90', 'io', 'ip', 'p1', 'p10', 'p11', 'p12', 'p13', 'p14', 'p15', 'p16', 'p17', 'p18', 'p19', 'p2', 'p20', 'p21', 'p22', 'p23', 'p24', 'p25', 'p26', 'p27', 'p28', 'p3', 'p4', 'p5', 'p6', 'p8', 'p9', 'pa10', 'pa12', 'pa13', 'pa14', 'pa8', 'pb', 'pg', 'ph1.5', 'ph2', 'ph2.1', 'ph2.2', 'ph2.4', 'ph2.5', 'ph2.8', 'ph2.9', 'ph3', 'ph3.2', 'ph3.5', 'ph4', 'ph4.2', 'ph4.3', 'ph4.5', 'ph4.8', 'ph5', 'ph5.3', 'pl10', 'pl100', 'pl110', 'pl120', 'pl15', 'pl20', 'pl25', 'pl30', 'pl35', 'pl40', 'pl5', 'pl50', 'pl60', 'pl70', 'pl80', 'pl90', 'pm10', 'pm13', 'pm15', 'pm2', 'pm20', 'pm30', 'pm35', 'pm40', 'pm5', 'pm50', 'pm55', 'pm8', 'pn', 'pne', 'po', 'pr10', 'pr100', 'pr20', 'pr30', 'pr40', 'pr50', 'pr60', 'pr70', 'pr80', 'ps', 'pw2', 'pw2.5', 'pw3', 'pw3.2', 'pw3.5', 'pw4', 'pw4.2', 'pw4.5', 'w10', 'w12', 'w13', 'w16', 'w18', 'w20', 'w21', 'w22', 'w3', 'w30', 'w32', 'w34', 'w35', 'w37', 'w38', 'w41', 'w42', 'w45', 'w46', 'w47', 'w5', 'w55', 'w57', 'w58', 'w59', 'w63', 'w66', 'w8', 'wo', 'w15', 'pl0'],
    "palette": [(184, 170, 76), (160, 182, 253), (89, 182, 178), (84, 33, 105), (7, 175, 68), (158, 108, 51), (24, 38, 103), (168, 60, 70), (10, 120, 39), (134, 247, 175), (19, 117, 216), (189, 33, 177), (152, 192, 223), (43, 140, 179), (168, 219, 4), (228, 146, 198), (48, 121, 20), (121, 30, 124), (89, 253, 81), (144, 106, 239), (131, 95, 78), (178, 50, 44), (248, 183, 28), (165, 182, 13), (117, 66, 148), (100, 138, 207), (163, 242, 15), (120, 128, 1), (18, 29, 176), (234, 45, 176), (174, 189, 1), (191, 104, 41), (128, 0, 39), (233, 103, 19), (141, 216, 56), (64, 115, 175), (53, 55, 167), (20, 31, 28), (176, 0, 248), (234, 185, 21), (28, 56, 81), (93, 171, 69), (172, 24, 68), (4, 30, 59), (122, 165, 225), (214, 121, 226), (78, 98, 56), (49, 162, 145), (85, 40, 92), (213, 218, 46), (174, 90, 218), (61, 111, 51), (52, 120, 18), (87, 215, 96), (159, 174, 248), (174, 242, 210), (193, 165, 101), (78, 132, 198), (62, 71, 232), (199, 92, 120), (97, 195, 190), (234, 24, 86), (163, 74, 25), (200, 175, 136), (2, 0, 185), (52, 216, 227), (192, 52, 226), (51, 170, 243), (230, 114, 49), (150, 226, 102), (158, 21, 82), (16, 246, 245), (86, 122, 189), (14, 97, 223), (30, 19, 127), (150, 84, 240), (96, 1, 56), (169, 249, 200), (22, 139, 109), (38, 10, 198), (58, 99, 242), (194, 91, 210), (187, 38, 111), (221, 195, 9), (14, 116, 109), (27, 4, 139), (27, 126, 30), (146, 59, 234), (154, 6, 249), (137, 91, 138), (4, 169, 209), (80, 35, 201), (146, 98, 147), (232, 40, 248), (65, 66, 23), (66, 127, 215), (180, 159, 108), (24, 95, 81), (34, 116, 121), (232, 24, 218), (116, 196, 95), (153, 89, 27), (66, 23, 239), (160, 110, 75), (199, 232, 83), (198, 124, 129), (14, 68, 195), (104, 78, 24), (186, 99, 137), (182, 26, 49), (24, 180, 213), (138, 41, 168), (5, 138, 50), (200, 213, 224), (186, 187, 43), (57, 67, 182), (130, 126, 41), (254, 58, 162), (233, 60, 93), (147, 69, 43), (119, 210, 69), (33, 48, 215), (53, 79, 213), (115, 131, 129), (73, 51, 35), (145, 9, 115), (96, 131, 154), (155, 138, 10), (110, 139, 0), (170, 67, 115), (182, 94, 155), (33, 40, 112), (29, 43, 203), (86, 52, 201), (35, 37, 212), (122, 134, 112), (147, 102, 153), (94, 188, 107), (249, 64, 109), (46, 119, 121), (145, 126, 104), (83, 40, 215), (218, 67, 107), (115, 87, 44), (166, 216, 91), (149, 57, 62), (5, 163, 187), (93, 10, 255), (157, 172, 227), (163, 137, 42), (222, 83, 29)]
}

train_dataloader = dict(
    batch_size=5,
    dataset=dict(
        data_root=data_root,
        metainfo=metainfo,
        ann_file='TT100K_CoCo_format_151_train.json',
        data_prefix=dict(img='train/')))
val_dataloader = dict(
    batch_size=5,
    dataset=dict(
        data_root=data_root,
        metainfo=metainfo,
        ann_file='TT100K_CoCo_format_151_test.json',
        data_prefix=dict(img='test/')))
test_dataloader = val_dataloader

# 修改评价指标相关配置
val_evaluator = dict(ann_file=data_root + 'TT100K_CoCo_format_151_test.json')
test_evaluator = val_evaluator

# 使用预训练的 Mask R-CNN 模型权重来做初始化，可以提高模型性能
load_from = 'model_zoo/yolov3/yolov3_d53_fp16_mstrain-608_273e_coco_20210517_213542-4bc34944.pth'
